# Default values for Traefik Enterprise
cluster: "default"

# imagePullSecrets:
#   - name: regcred

image:
  name: traefik/traefikee
  # defaults to appVersion
  tag: ""
  pullPolicy: IfNotPresent
  initContainer:
    name: busybox
    tag: "1.31.1"

# log:
#  level: DEBUG
#  format:
#  file:

registry:
  # To disable affinity at all set this value to null
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: component
                  operator: In
                  values:
                    - registry
            topologyKey: "kubernetes.io/hostname"

#   serviceLabels:
#     foo: bar
#   serviceAnnotations:
#     foo: bar
#   statefulSetLabels:
#     foo: bar
#   statefulSetAnnotations:
#     foo: bar
#   podLabels:
#     foo: bar
#   podAnnotations:
#     foo: bar
#   manualTokenSecret: true

controller:
  replicas: 1
  # To disable affinity at all set this value to null
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: component
                  operator: In
                  values:
                    - controllers
            topologyKey: "kubernetes.io/hostname"
#  staticConfig:
#    configMap:
#      name: traefik-config
#      key: "static.yml"
#  serviceLabels:
#    foo: bar
#  serviceAnnotations:
#    foo: bar
#  statefulSetLabels:
#    foo: bar
#  statefulSetAnnotations:
#    foo: bar
#  podLabels:
#    foo: bar
#  podAnnotations:
#    foo: bar
#  additionalArguments:
#    - --foo=bar
#  env:
#    - name: FOO
#      value: 1
#    - name: BAR
#      valueFrom:
#        secretKeyRef:
#          name: foo
#          key: BAR

proxy:
  replicas: 2
  serviceType: LoadBalancer
  ports:
    - name: http
      port: 80
    - name: https
      port: 443

  # To disable affinity at all set this value to null
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: component
                  operator: In
                  values:
                    - proxies
            topologyKey: "kubernetes.io/hostname"
#  readinessProbe:
#    tcpSocket:
#      port: http
#    initialDelaySeconds: 2
#    periodSeconds: 5
#  serviceLabels:
#    foo: bar
#  serviceAnnotations:
#    foo: bar
#  deploymentLabels:
#    foo: bar
#  deploymentAnnotations:
#    foo: bar
#  podLabels:
#    foo: bar
#  podAnnotations:
#    foo: bar
#  additionalArguments:
#    - --foo=bar
#  env:
#    - name: FOO
#      value: 1
#    - name: BAR
#      valueFrom:
#        secretKeyRef:
#          name: foo
#          key: BAR
#  # minAvailable or maxUnavailable (default value is maxUnavailable: 1)
#  podDisruptionBudget:
#    minAvailable: 1
#    maxUnavailable: 1
# terminationGracePeriodSeconds: 30

mesh:
  enabled: false
  kubedns: false
  clusterDomain: "cluster.local"
#  daemonSetLabels:
#    foo: bar
#  daemonSetAnnotations:
#    foo: bar
#  podLabels:
#    foo: bar
#  podAnnotations:
#    foo: bar
