suite: proxy test
templates:
  - proxy/deployment.yaml
tests:
  - it: should deploy the proxy
    asserts:
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: default-proxy
      - equal:
          path: spec.template.spec.containers[0].image
          value: "traefik/traefikee:v2.10.1"
      - equal:
          path: spec.template.spec.affinity
          value:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                          - key: component
                            operator: In
                            values:
                              - proxies
                      topologyKey: "kubernetes.io/hostname"
  - it: should override defaults
    set:
      cluster: "mysupertraefikee"
      image.name: "mycustompublisher/myspecialimage"
      image.tag: "myspecialversion"
      image.pullPolicy: Never
      proxy:
        replicas: 2
        affinity: null
    asserts:
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: mysupertraefikee-proxy
      - equal:
          path: spec.template.spec.containers[0].image
          value: "mycustompublisher/myspecialimage:myspecialversion"
      - equal:
          path: spec.replicas
          value: 2
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Never
      - hasDocuments:
          count: 1
      - isNull:
          path: spec.template.spec.affinity
  - it: default ports are set
    asserts:
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: default-proxy
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 443
            name: https
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 8484
            name: distributed
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 80
            name: http
  - it: should set imagePullSecrets correctly
    set:
      imagePullSecrets:
        - name: regcred
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: regcred
  - it: should not set priorityClassName by default
    asserts:
      - isNull:
          path: spec.template.spec.priorityClassName
  - it: should set priorityClassName
    set:
      priorityClassName: important
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: important
  - it: should set default resources
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "400m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
  - it: should be possible to remove resources
    set:
      proxy:
        resources: null
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].resources
  - it: should set custom resources requests & limits
    set:
      proxy:
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "300m"
            memory: "150Mi"
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "300m"
              memory: "150Mi"
  - it: should not set topologySpreadConstraints by default
    asserts:
      - isNull:
          path: spec.template.spec.topologySpreadConstraints
  - it: should set topologySpreadConstraints
    set:
      proxy:
        topologySpreadConstraints:
          - labelSelector:
              matchLabels:
                app: traefikee
                component: proxies
            maxSkew: 1
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: DoNotSchedule
    asserts:
      - isSubset:
          path: spec.template.spec
          content:
            topologySpreadConstraints:
              - labelSelector:
                  matchLabels:
                    app: traefikee
                    component: proxies
                maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: DoNotSchedule
  - it: should not set tolerations by default
    asserts:
      - isNull:
          path: spec.template.spec.tolerations
  - it: should be possible to set tolerations
    set:
      proxy:
        tolerations:
        - key: "testkey"
          operator: "Equal"
          value: "testvalue"
          effect: "NoSchedule"
        - key: "RSA"
          operator: "Destructor"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "key"
            operator: "Equal"
            value: "value"
            effect: "NoSchedule"
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "RSA"
            operator: "Destructor"            
---
suite: proxy service test
templates:
  - proxy/service.yaml
tests:
  - it: should use LoadBalancer by default
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: LoadBalancer
  - it: should use NodePort
    set:
      proxy:
        serviceType: NodePort
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: NodePort
  - it: should set loadbalancerIP
    set:
      proxy:
        loadBalancerIP: "1.2.3.4"
        serviceType: loadBalancer
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.loadBalancerIP
          value: "1.2.3.4"