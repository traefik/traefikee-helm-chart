suite: controller test
templates:
  - stateful-sets.yaml
tests:
  - it: can enable static config
    set:
      controller:
        staticConfig:
          configMap:
            name: test-map
            key: "static.yaml"
    documentIndex: 2
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: default-controller
      - contains:
          path: spec.template.spec.containers[0].command
          content: "--configFile=/var/run/traefikee/config/static.yaml"
  - it: can disable static config
    documentIndex: 2
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: default-controller
      - notContains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: staticconfig
            mountPath: /var/run/traefikee/config
          count: 1
      - notContains:
          path: spec.template.spec.containers[0].command
          content: "--configFile=/var/run/traefikee/config/static.yaml"
  - it: should deploy the registry and controller
    asserts:
      - isKind:
          of: StatefulSet
        documentIndex: 1
      - isKind:
          of: StatefulSet
        documentIndex: 2
      - isAPIVersion:
          of: apps/v1
        documentIndex: 2
      - equal:
          path: metadata.name
          value: default-controller
        documentIndex: 2
      - hasDocuments:
          count: 3
      - documentIndex: 1
        equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: component
                          operator: In
                          values:
                            - registry
                    topologyKey: kubernetes.io/hostname
      - documentIndex: 2
        equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: component
                          operator: In
                          values:
                            - controllers
                    topologyKey: kubernetes.io/hostname
  - it: should override controller defaults
    set:
      cluster: "mysupertraefikee"
      image.name: "mycustompublisher/myspecialimage"
      image.tag: "myspecialversion"
      image.pullPolicy: Never
      controller:
        replicas: 2
        affinity: null
    documentIndex: 2
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: mysupertraefikee-controller
      - equal:
          path: spec.template.spec.containers[0].image
          value: "mycustompublisher/myspecialimage:myspecialversion"
      - equal:
          path: spec.replicas
          value: 2
      - equal:
          path: spec.serviceName
          value: mysupertraefikee-ctrl-svc
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Never
      - isNull:
          path: spec.template.spec.affinity
  - it: should override registry defaults
    set:
      cluster: "mysupertraefikee"
      image.name: "mycustompublisher/myspecialimage"
      image.tag: "myspecialversion"
      image.pullPolicy: Never
      registry:
        affinity: null
    documentIndex: 1
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: mysupertraefikee-plugin-registry
      - equal:
          path: spec.template.spec.containers[0].image
          value: "mycustompublisher/myspecialimage:myspecialversion"
      - equal:
          path: spec.serviceName
          value: mysupertraefikee-plugin-registry-svc
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Never
      - isNull:
          path: spec.template.spec.affinity
  - it: should add labels and annotations
    set:
      cluster: "mysupertraefikee"
      controller:
        statefulSetLabels:
          st-lb-foo: bar
        statefulSetAnnotations:
          st-an-foo: bar
        podLabels:
          pod-lb-foo: bar
        podAnnotations:
          pod-an-foo: bar
    documentIndex: 2
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: spec.template.metadata.labels.pod-lb-foo
          value: "bar"
      - equal:
          path: spec.template.metadata.annotations.pod-an-foo
          value: "bar"
      - equal:
          path: metadata.labels.st-lb-foo
          value: "bar"
      - equal:
          path: metadata.annotations.st-an-foo
          value: "bar"
  - it: should have additional arguments
    set:
      controller:
        additionalArguments:
          - --foo=bar
    documentIndex: 2
    asserts:
      - isKind:
          of: StatefulSet
      - isAPIVersion:
          of: apps/v1
      - contains:
          path: spec.template.spec.containers[0].command
          content: "--foo=bar"
  - it: should set imagePullSecrets correctly (registry)
    set:
      imagePullSecrets:
        - name: regcred
    documentIndex: 1
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: regcred
  - it: should set imagePullSecrets correctly (controllers)
    set:
      imagePullSecrets:
        - name: regcred
    documentIndex: 2
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: regcred
  - it: should generate a default token secret
    documentIndex: 0
    asserts:
      - isKind:
          of: Secret
      - hasDocuments:
          count: 3
      - matchRegex:
          path: data.token
          pattern: "[a-zA-Z0-9]{14}[=]{2}"
  - it: should use generated token secret or specified token
    documentIndex: 1
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.name
          value: "default-registry-token"
  - it: should fail because of missing secret name
    set:
      registry:
        manualTokenSecret: true
        tokenSecretRef:
          namespace: test
    asserts:
      - failedTemplate:
          errorMessage: "registry.tokenSecretRef needs at least secret name to be specified !"
  - it: should fail because the secret can't be look up
    set:
      registry:
        manualTokenSecret: true
        tokenSecretRef:
          name: test
    asserts:
      - failedTemplate:
          errorMessage: "failed to lookup token from secret NAMESPACE/test"
  - it: should not set priorityClassName by default
    asserts:
      - isNull:
          path: spec.template.spec.priorityClassName
  - it: should be possible to set priorityClassName
    set:
      priorityClassName: important
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: important
        documentIndex: 1
      - equal:
          path: spec.template.spec.priorityClassName
          value: important
        documentIndex: 2
  - it: should set expected resources by default
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "4Gi"
        documentIndex: 1
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "4Gi"
        documentIndex: 2
  - it: should be possible to remove resources
    set:
      controller:
        resources: null
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].resources
  - it: should set custom resources requests & limits on registry & controller
    set:
      controller:
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "300m"
            memory: "150Mi"
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "300m"
              memory: "150Mi"
        documentIndex: 1
      - isSubset:
          path: spec.template.spec.containers[0].resources
          content:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "300m"
              memory: "150Mi"
        documentIndex: 2
  - it: should not set tolerations by default
    asserts:
      - isNull:
          path: spec.template.spec.tolerations
  - it: should be possible to set tolerations
    set:
      tolerations:
        - key: "testkey"
          operator: "Equal"
          value: "testvalue"
          effect: "NoSchedule"
        - key: "RSA"
          operator: "Destructor"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content: 
            key: "testkey"
            operator: "Equal"
            value: "testvalue"
            effect: "NoSchedule"
        documentIndex: 1
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "RSA"
            operator: "Destructor"
        documentIndex: 1
      - contains:
          path: spec.template.spec.tolerations
          content: 
            key: "testkey"
            operator: "Equal"
            value: "testvalue"
            effect: "NoSchedule"
        documentIndex: 2
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "RSA"
            operator: "Destructor"
        documentIndex: 2
