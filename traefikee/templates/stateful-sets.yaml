{{- $tokenStr := include "traefikee-helm-chart.registry-token" . }}
{{- $tokenShaSum := $tokenStr | sha256sum }}
{{- $tokenRefName := (printf "%s-registry-token" .Values.cluster) }}

{{- if or (empty (.Values.registry).manualTokenSecret) (eq (.Values.registry).manualTokenSecret false)}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.cluster }}-registry-token
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  token: {{ $tokenStr }}
{{ else }}
  {{- $tokenRefName = .Values.registry.tokenSecretRef.name }}
{{- end }}

{{- if .Values.registry.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.cluster }}-plugin-registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "common.labels" . | nindent 4 }}
    {{- with (.Values.registry).statefulSetLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with (.Values.registry).statefulSetAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ .Values.cluster }}-plugin-registry-svc
  replicas: 1
  selector:
    matchLabels:
      app: traefikee
      release: {{ .Values.cluster }}
      component: registry
  template:
    metadata:
      annotations:
        # This ensures that the registry pods will be rollout,
        # if the token for the plugin registry has changed since last deployment.
        checksum/config: {{ $tokenShaSum }}
        {{- with (.Values.registry).podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        component: registry
        {{ include "common.labels" . | nindent 8 }}
        {{- with (.Values.registry).podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.registry.affinity }}
      affinity:
        {{- tpl (toYaml .Values.registry.affinity) . | nindent 8 }}
      {{- end }}
      {{- if .Values.registry.tolerations }}
      tolerations:
        {{- tpl (toYaml .Values.registry.tolerations) . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: {{ template "traefikee-helm-chart.initContainer-image-name" . }}
          command: ['sh', '-c', 'until nslookup -type=a {{ printf "%s-ctrl-svc.%s" .Values.cluster .Release.Namespace }}.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
        - name: chown
          image: {{ template "traefikee-helm-chart.initContainer-image-name" . }}
          command: ['chown', '-R', '65532:', '/var/lib/traefikee', '/var/lib/plugins']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - name: {{ .Values.cluster }}-plugin-registry-data
              mountPath: "/var/lib/traefikee"
            - name: plugin-data
              mountPath: "/var/lib/plugins"
      containers:
        - name: {{ .Values.cluster }}-plugin-registry
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PLUGIN_REGISTRY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $tokenRefName }}
                  key: token
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 6443
              name: https
          livenessProbe:
            httpGet:
              port: https
              scheme: HTTPS
              path: /plugins
            initialDelaySeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: https
              scheme: HTTPS
              path: /plugins
            initialDelaySeconds: 2
            periodSeconds: 5
          {{- with .Values.controller.resources }}
          resources:
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cluster }}-plugin-registry-data
              mountPath: "/var/lib/traefikee"
            - name: plugin-data
              mountPath: "/var/lib/plugins"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "plugin-registry"
            - "--name=$(POD_NAME)"
            - "--addr=:6443"
            - "--plugindir=/var/lib/plugins"
            - "--token=$(PLUGIN_REGISTRY_TOKEN)"
            - "--discovery.dns.domain={{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level={{ (.Values.log).level | default "" }}"
            - "--log.filepath={{ (.Values.log).filepath | default "" }}"
            - "--log.format={{ (.Values.log).format | default "" }}"
      volumes:
        - name: {{ .Values.cluster }}-plugin-registry-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: {{ .Values.cluster }}-tokens
  volumeClaimTemplates:
    - metadata:
        name: plugin-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.cluster }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "common.labels" . | nindent 4 }}
    {{- with .Values.controller.statefulSetLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.controller.statefulSetAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: traefikee
      release: {{ .Values.cluster }}
      component: controllers
  podManagementPolicy: Parallel
  serviceName: {{ .Values.cluster }}-ctrl-svc
  replicas: {{ .Values.controller.replicas }}
  template:
    metadata:
      annotations:
        # This ensures that the registry pods will be rollout,
        # if the token for the plugin registry has changed since last deployment.
        checksum/config: {{ $tokenShaSum }}
        {{- with (.Values.controller).podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        component: controllers
        {{ include "common.labels" . | nindent 8 }}
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.controller.topologySpreadConstraints }}
      {{- if (semverCompare "<1.19.0-0" .Capabilities.KubeVersion.Version) }}
        {{- fail "ERROR: topologySpreadConstraints are supported only on kubernetes >= v1.19" -}}
      {{- end }}
      topologySpreadConstraints:
        {{- tpl (toYaml .Values.controller.topologySpreadConstraints) . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.cluster }}-svc-acc
      {{- if .Values.controller.affinity }}
      affinity:
        {{- tpl (toYaml .Values.controller.affinity) . | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations }}
      tolerations:
        {{- tpl (toYaml .Values.controller.tolerations) . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-dns
          image: {{ template "traefikee-helm-chart.initContainer-image-name" . }}
          command: ['sh', '-c', 'until nslookup -type=a {{ printf "%s-ctrl-svc.%s" .Values.cluster .Release.Namespace }}.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
        - name: chown
          image: {{ template "traefikee-helm-chart.initContainer-image-name" . }}
          command: ['chown', '-R', '65532:', '/var/lib/traefikee']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
      containers:
        - name: {{ .Values.cluster }}-controller
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cluster }}-license
                  key: license
            - name: PLUGIN_REGISTRY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $tokenRefName }}
                  key: token
          {{- with .Values.controller.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 65532
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 4242
              name: control-port
            - containerPort: 8080
              name: api
          readinessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
          {{- with .Values.controller.resources }}
          resources:
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
            - name: sockets
              mountPath: /var/run/traefikee
            {{- if (.Values.controller.staticConfig).configMap }}
            - name: staticconfig
              mountPath: /var/run/traefikee/config
            {{- end }}
          command:
            - "/traefikee"
            - "controller"
            - "--name=$(POD_NAME)"
            - "--advertise=$(POD_NAME).{{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE):4242"
            - "--discovery.dns.bootstrapexpected={{ .Values.controller.replicas }}"
            - "--discovery.dns.domain={{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.kubernetes.prefix={{ .Values.cluster }}"
            - "--jointoken.kubernetes.namespace={{ .Release.Namespace }}"
            - "--license=$(LICENSE)"
            - "--api.autocerts"
            {{- if (.Values.controller.staticConfig).configMap }}
            - "--configFile=/var/run/traefikee/config/{{ .Values.controller.staticConfig.configMap.key }}"
            {{- end }}
            - "--log.level={{ (.Values.log).level | default "" }}"
            - "--log.filepath={{ (.Values.log).filepath | default "" }}"
            - "--log.format={{ (.Values.log).format | default "" }}"
            - "--plugin.url=https://{{ .Values.cluster }}-plugin-registry-svc.{{ .Release.Namespace }}.svc.cluster.local"
            - "--plugin.token=$(PLUGIN_REGISTRY_TOKEN)"
            {{- with .Values.controller.additionalArguments }}
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
      volumes:
        - name: sockets
          emptyDir: {}
        {{- if (.Values.controller.staticConfig).configMap }}
        - name: staticconfig
          configMap:
            name: {{ .Values.controller.staticConfig.configMap.name }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
