{{ if .Values.mesh.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.cluster }}-mesh-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app: traefikee
    release: {{ .Values.cluster }}
spec:
  selector:
    matchLabels:
      app: traefikee
      component: maesh-mesh
      release: {{ .Values.cluster }}
  template:
    metadata:
      labels:
        app: traefikee
        component: maesh-mesh
        release: {{ .Values.cluster }}
    spec:
      serviceAccountName: {{ .Values.cluster }}-mesh-proxy
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      terminationGracePeriodSeconds: 30
      containers:
        - name: maesh-mesh
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: readiness
              containerPort: 1081
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
          volumeMounts:
            - name: {{ .Values.cluster }}-proxy-data
              mountPath: "/var/lib/traefikee"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          readinessProbe:
            httpGet:
              path: /ping
              port: 1081
            initialDelaySeconds: 3
            periodSeconds: 1
          command:
            - "/traefikee"
            - "proxy"
            - "--role=mesh"
            - "--name=$(POD_NAME)"
            - "--discovery.dns.domain={{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: {{ .Values.cluster }}-proxy-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: {{ .Values.cluster }}-tokens
{{ end }}