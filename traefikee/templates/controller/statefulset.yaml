---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.cluster }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "common.labels" . | indent 4 }}
  {{- with .Values.controller.statefulSetLabels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.controller.statefulSetAnnotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: traefikee
      release: {{ .Values.cluster }}
      component: controllers
  podManagementPolicy: Parallel
  serviceName: {{ .Values.cluster }}-ctrl-svc
  replicas: {{ .Values.controllers }}
  template:
    metadata:
      annotations:
        # This ensures that the controller pods will be rollout,
        # if the token for the plugin registry has changed since last deployment.
        checksum/config: {{ include "traefikee-helm-chart.registry-token" . | indent 4 | sha256sum }}
        {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: traefikee
        release: {{ .Values.cluster }}
        component: controllers
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.cluster }}-svc-acc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - controllers
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-dns
          image: busybox:1.31.1
          command: ['sh', '-c', 'until nslookup -type=a {{ printf "%s-ctrl-svc.%s" .Values.cluster .Release.Namespace }}.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: {{ .Values.cluster }}-controller
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cluster }}-license
                  key: license
            - name: PLUGIN_REGISTRY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cluster }}-registry-token
                  key: token
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 4242
              name: control-port
            - containerPort: 8080
              name: api
          readinessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
            - name: sockets
              mountPath: /var/run/traefikee
            {{- if (.Values.controller.staticConfig).configMap }}
            - name: staticconfig
              mountPath: /var/run/traefikee/config
            {{ end }}
          command:
            - "/traefikee"
            - "controller"
            - "--name=$(POD_NAME)"
            - "--advertise=$(POD_NAME).{{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE):4242"
            - "--discovery.dns.bootstrapexpected={{ .Values.controller.count }}"
            - "--discovery.dns.domain={{ .Values.cluster }}-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.kubernetes.prefix={{ .Values.cluster }}"
            - "--jointoken.kubernetes.namespace={{ .Release.Namespace }}"
            - "--license=$(LICENSE)"
            - "--api.autocerts"
            {{- if (.Values.controller.staticConfig).configMap }}
            - "--configFile=/var/run/traefikee/config/{{ .Values.controller.staticConfig.configMapKey }}"
            {{ end }}
            - "--log.level={{ (.Values.log).level | default "" }}"
            - "--log.filepath={{ (.Values.log).filepath | default "" }}"
            - "--log.format={{ (.Values.log).format | default "" }}"
            - "--plugin.url=https://{{ .Values.cluster }}-plugin-registry-svc.{{ .Release.Namespace }}.svc.cluster.local"
            - "--plugin.token=$(PLUGIN_REGISTRY_TOKEN)"
            {{- with .Values.controller.additionalArguments }}
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
      volumes:
        - name: sockets
          emptyDir: {}
        {{ if (.Values.controller.staticConfig).configMap }}
        - name: staticconfig
          configMap:
            name: {{ .Values.controller.staticConfig.configMap }}
        {{ end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi