---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cluster }}-proxy
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.proxy.replicas }}
  selector:
    matchLabels:
      app: traefikee
      release: {{ .Values.cluster }}
      component: proxies
  template:
    metadata:
      labels:
        app: traefikee
        release: {{ .Values.cluster }}
        component: proxies
    spec:
{{- if .Values.proxy.affinity }}
      affinity:
{{ toYaml .Values.proxy.affinity | indent 8 }}
{{- end }}
{{- if .Values.proxy.tolerations }}
      tolerations:
{{ toYaml .Values.proxy.tolerations | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: busybox:1.31.1
          command: ['sh', '-c', 'until nslookup -type=a {{ printf "%s-ctrl-svc.%s" .Values.cluster .Release.Namespace }}.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: {{ .Values.cluster }}-proxy
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.proxy.containers.proxy.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 8484
              name: distributed
{{- range $port := .Values.proxy.containers.proxy.ports }}
            - containerPort: {{ $port.port}}
              name: {{ $port.name}}
{{ end }}
{{- if .Values.proxy.containers.proxy.resources }}
          resources:
{{ toYaml .Values.proxy.containers.proxy.resources | indent 12 }}
{{- end }}
          volumeMounts:
            - name: {{ .Values.cluster }}-proxy-data
              mountPath: "/var/lib/traefikee"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "proxy"
            - "--role=ingress"
            - "--name=$(POD_NAME)"
            - {{ printf "--discovery.dns.domain=%s-ctrl-svc.$(POD_NAMESPACE)" .Values.cluster }}
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: {{ .Values.cluster }}-proxy-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: {{ .Values.cluster }}-tokens
