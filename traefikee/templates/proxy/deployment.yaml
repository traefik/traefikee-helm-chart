---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cluster  }}-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    {{- with .Values.proxy.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.proxy.deploymentAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.proxy.replicas }}
  selector:
    matchLabels:
      app: traefikee
      release: {{ .Values.cluster }}
      component: proxies
  template:
    metadata:
      labels:
        component: proxies
        {{ include "common.labels" . | nindent 8 }}
        {{- with .Values.proxy.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.proxy.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.topologySpreadConstraints }}
      {{- if (semverCompare "<1.19.0-0" .Capabilities.KubeVersion.Version) }}
        {{- fail "ERROR: topologySpreadConstraints are supported only on kubernetes >= v1.19" -}}
      {{- end }}
      topologySpreadConstraints:
        {{- tpl (toYaml .Values.topologySpreadConstraints) . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.proxy.affinity }}
      affinity:
        {{- tpl (toYaml .Values.proxy.affinity) . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.proxy.terminationGracePeriodSeconds | default 30 }}
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: {{ template "traefikee-helm-chart.initContainer-image-name" . }}
          command: ['sh', '-c', 'until nslookup -type=a {{ printf "%s-ctrl-svc.%s" .Values.cluster .Release.Namespace }}.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              memory: "10Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "1000m"
      containers:
        - name: {{ .Values.cluster }}-proxy
          image: {{ template "traefikee-helm-chart.image-name" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- with .Values.proxy.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - containerPort: 8484
              name: distributed
          {{- range $port := .Values.proxy.ports }}
            - containerPort: {{ $port.targetPort | default $port.port }}
              name: {{ $port.name }}
          {{- end }}
          {{- if .Values.proxy.readinessProbe }}
          readinessProbe:
            {{- with .Values.proxy.readinessProbe }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with .Values.proxy.resources }}
          resources:
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cluster }}-proxy-data
              mountPath: "/var/lib/traefikee"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "proxy"
            - "--role=ingress"
            - "--name=$(POD_NAME)"
            - {{ printf "--discovery.dns.domain=%s-ctrl-svc.$(POD_NAMESPACE)" .Values.cluster }}
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level={{ (.Values.log).level | default "" }}"
            - "--log.filepath={{ (.Values.log).filepath | default "" }}"
            - "--log.format={{ (.Values.log).format | default "" }}"
            {{- with .Values.proxy.additionalArguments }}
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
      volumes:
        - name: {{ .Values.cluster }}-proxy-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: {{ .Values.cluster }}-tokens
